//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "RentalOption_Movie", "Movies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Filmster.Data.Movie), "RentalOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Filmster.Data.RentalOption), true)]
[assembly: EdmRelationshipAttribute("Model", "RentalOption_Vendor", "Vendors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Filmster.Data.Vendor), "RentalOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Filmster.Data.RentalOption), true)]

#endregion

namespace Filmster.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FilmsterEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FilmsterEntities object using the connection string found in the 'FilmsterEntities' section of the application configuration file.
        /// </summary>
        public FilmsterEntities() : base("name=FilmsterEntities", "FilmsterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FilmsterEntities object.
        /// </summary>
        public FilmsterEntities(string connectionString) : base(connectionString, "FilmsterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FilmsterEntities object.
        /// </summary>
        public FilmsterEntities(EntityConnection connection) : base(connection, "FilmsterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movie>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movie> _Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentalOption> RentalOptions
        {
            get
            {
                if ((_RentalOptions == null))
                {
                    _RentalOptions = base.CreateObjectSet<RentalOption>("RentalOptions");
                }
                return _RentalOptions;
            }
        }
        private ObjectSet<RentalOption> _RentalOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentalOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentalOptions(RentalOption rentalOption)
        {
            base.AddObject("RentalOptions", rentalOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="porn">Initial value of the Porn property.</param>
        /// <param name="impressions">Initial value of the Impressions property.</param>
        public static Movie CreateMovie(global::System.Int32 id, global::System.Boolean porn, global::System.Int32 impressions)
        {
            Movie movie = new Movie();
            movie.Id = id;
            movie.Porn = porn;
            movie.Impressions = impressions;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Plot
        {
            get
            {
                return _Plot;
            }
            set
            {
                OnPlotChanging(value);
                ReportPropertyChanging("Plot");
                _Plot = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Plot");
                OnPlotChanged();
            }
        }
        private global::System.String _Plot;
        partial void OnPlotChanging(global::System.String value);
        partial void OnPlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReleaseDate
        {
            get
            {
                return _ReleaseDate;
            }
            set
            {
                OnReleaseDateChanging(value);
                ReportPropertyChanging("ReleaseDate");
                _ReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseDate");
                OnReleaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReleaseDate;
        partial void OnReleaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Porn
        {
            get
            {
                return _Porn;
            }
            set
            {
                OnPornChanging(value);
                ReportPropertyChanging("Porn");
                _Porn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Porn");
                OnPornChanged();
            }
        }
        private global::System.Boolean _Porn;
        partial void OnPornChanging(global::System.Boolean value);
        partial void OnPornChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Impressions
        {
            get
            {
                return _Impressions;
            }
            set
            {
                OnImpressionsChanging(value);
                ReportPropertyChanging("Impressions");
                _Impressions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Impressions");
                OnImpressionsChanged();
            }
        }
        private global::System.Int32 _Impressions;
        partial void OnImpressionsChanging(global::System.Int32 value);
        partial void OnImpressionsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RentalOption_Movie", "RentalOptions")]
        public EntityCollection<RentalOption> RentalOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentalOption>("Model.RentalOption_Movie", "RentalOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentalOption>("Model.RentalOption_Movie", "RentalOptions", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="RentalOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentalOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentalOption object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="highDefinition">Initial value of the HighDefinition property.</param>
        /// <param name="subscriptionBased">Initial value of the SubscriptionBased property.</param>
        /// <param name="added">Initial value of the Added property.</param>
        /// <param name="lastSeen">Initial value of the LastSeen property.</param>
        /// <param name="impressions">Initial value of the Impressions property.</param>
        public static RentalOption CreateRentalOption(global::System.Int32 id, global::System.Single price, global::System.Boolean highDefinition, global::System.Boolean subscriptionBased, global::System.DateTime added, global::System.DateTime lastSeen, global::System.Int32 impressions)
        {
            RentalOption rentalOption = new RentalOption();
            rentalOption.Id = id;
            rentalOption.Price = price;
            rentalOption.HighDefinition = highDefinition;
            rentalOption.SubscriptionBased = subscriptionBased;
            rentalOption.Added = added;
            rentalOption.LastSeen = lastSeen;
            rentalOption.Impressions = impressions;
            return rentalOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Single _Price;
        partial void OnPriceChanging(global::System.Single value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HighDefinition
        {
            get
            {
                return _HighDefinition;
            }
            set
            {
                OnHighDefinitionChanging(value);
                ReportPropertyChanging("HighDefinition");
                _HighDefinition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighDefinition");
                OnHighDefinitionChanged();
            }
        }
        private global::System.Boolean _HighDefinition;
        partial void OnHighDefinitionChanging(global::System.Boolean value);
        partial void OnHighDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverUrl
        {
            get
            {
                return _CoverUrl;
            }
            set
            {
                OnCoverUrlChanging(value);
                ReportPropertyChanging("CoverUrl");
                _CoverUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverUrl");
                OnCoverUrlChanged();
            }
        }
        private global::System.String _CoverUrl;
        partial void OnCoverUrlChanging(global::System.String value);
        partial void OnCoverUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SubscriptionBased
        {
            get
            {
                return _SubscriptionBased;
            }
            set
            {
                OnSubscriptionBasedChanging(value);
                ReportPropertyChanging("SubscriptionBased");
                _SubscriptionBased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionBased");
                OnSubscriptionBasedChanged();
            }
        }
        private global::System.Boolean _SubscriptionBased;
        partial void OnSubscriptionBasedChanging(global::System.Boolean value);
        partial void OnSubscriptionBasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Added
        {
            get
            {
                return _Added;
            }
            set
            {
                OnAddedChanging(value);
                ReportPropertyChanging("Added");
                _Added = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Added");
                OnAddedChanged();
            }
        }
        private global::System.DateTime _Added;
        partial void OnAddedChanging(global::System.DateTime value);
        partial void OnAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastSeen
        {
            get
            {
                return _LastSeen;
            }
            set
            {
                OnLastSeenChanging(value);
                ReportPropertyChanging("LastSeen");
                _LastSeen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastSeen");
                OnLastSeenChanged();
            }
        }
        private global::System.DateTime _LastSeen;
        partial void OnLastSeenChanging(global::System.DateTime value);
        partial void OnLastSeenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Movie_Id
        {
            get
            {
                return _Movie_Id;
            }
            set
            {
                OnMovie_IdChanging(value);
                ReportPropertyChanging("Movie_Id");
                _Movie_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Movie_Id");
                OnMovie_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Movie_Id;
        partial void OnMovie_IdChanging(Nullable<global::System.Int32> value);
        partial void OnMovie_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Vendor_Id
        {
            get
            {
                return _Vendor_Id;
            }
            set
            {
                OnVendor_IdChanging(value);
                ReportPropertyChanging("Vendor_Id");
                _Vendor_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Vendor_Id");
                OnVendor_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Vendor_Id;
        partial void OnVendor_IdChanging(Nullable<global::System.Int32> value);
        partial void OnVendor_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Impressions
        {
            get
            {
                return _Impressions;
            }
            set
            {
                OnImpressionsChanging(value);
                ReportPropertyChanging("Impressions");
                _Impressions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Impressions");
                OnImpressionsChanged();
            }
        }
        private global::System.Int32 _Impressions;
        partial void OnImpressionsChanging(global::System.Int32 value);
        partial void OnImpressionsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RentalOption_Movie", "Movies")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("Model.RentalOption_Movie", "Movies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("Model.RentalOption_Movie", "Movies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("Model.RentalOption_Movie", "Movies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("Model.RentalOption_Movie", "Movies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RentalOption_Vendor", "Vendors")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("Model.RentalOption_Vendor", "Vendors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("Model.RentalOption_Vendor", "Vendors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("Model.RentalOption_Vendor", "Vendors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("Model.RentalOption_Vendor", "Vendors", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Vendor CreateVendor(global::System.Int32 id)
        {
            Vendor vendor = new Vendor();
            vendor.Id = id;
            return vendor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RentalOption_Vendor", "RentalOptions")]
        public EntityCollection<RentalOption> RentalOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentalOption>("Model.RentalOption_Vendor", "RentalOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentalOption>("Model.RentalOption_Vendor", "RentalOptions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
